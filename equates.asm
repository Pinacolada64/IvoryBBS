{asm}
d6510	= $00
adray1	= $03
adray2	= $05
charac	= $07
endchr	= $08
count	= $0b
dimflg	= $0c
garbfl	= $0f
inpflg	= $11
tansgn	= $12
temppt	= $16
lastpt	= $17
tempst	= $19
z_1b	= $1b
z_1d	= $1d
z_1f	= $1f
z_21	= $21
z_24	= $24
z_25	= $25
resho	= $26
z_28	= $28
z_29	= $29
txttab	= $2b
vartab	= $2d
arytab	= $2f
strend	= $31
fretop	= $33
frespc	= $35
memsiz1	= $37
curlin	= $39 ; $39/$3a Current BASIC Line Number
oldlin	= $3b ; $3b/$3c Previous BASIC Line Number
oldtxt	= $3d
datlin	= $3f
datptr	= $41
inpptr	= $43
varnam	= $45
varpnt	= $47
forpnt	= $49
z_4c	= $4c
dscpnt	= $50
z_52	= $52
jmper	= $0054
z_56	= $56
z_59	= $59
z_5b	= $5b
z_5c	= $5c
z_5d	= $5d
z_5f	= $5f
fac1	= $61
facho	= $62 ; Floating Point Accumulator #1: Mantissa ($62-$65)
z_64	= $64
facsgn	= $66
fac2	= $69
z_6c	= $6c
z_6d	= $6d
argsgn	= $6e
z_78	= $78
chrgot	= $0079
txtptr	= $7a
z_7d	= $7d
z_7f	= $7f
z_80	= $80
z_83	= $83
z_84	= $84
z_85	= $85
z_87	= $87
z_89	= $89
z_8a	= $8a
z_8e	= $8e
status	= $90
svxt	= $92
verck2	= $93
bsour	= $95
syno	= $96 ; Cassette Block Synchronization Number
ldtnd	= $98
dfltn	= $99
dflto	= $9a
dpsw	= $9c
msgflg	= $9d
ptr1	= $9e
ptr2	= $9f
z_a4	= $a4
bufpnt	= $a6
ridata	= $aa
riprty	= $ab
sal	= $ac
z_af	= $af
cmp0	= $b0
tape1	= $b2
bitts	= $b4
fnlen	= $b7
curdev	= $ba ; Current Device Number Being Used
fnadr	= $bb
roprty	= $bd
mych	= $bf
cas1	= $c0
stal	= $c1
memuss	= $c3
rvs	= $c7
indx	= $c8
lxsp	= $c9
blnsw	= $cc
gdbln	= $ce
blnon	= $cf
crsw	= $d0
pnt	= $d1
qtsw	= $d4
lnmx	= $d5
insrt	= $d8
ldtb1	= $d9
z_db	= $db
z_dd	= $dd
z_df	= $df
z_e3	= $e3
z_e4	= $e4
z_e6	= $e6
z_e8	= $e8
z_ea	= $ea
z_ec	= $ec
z_f0	= $f0
z_f4	= $f4
ribuf	= $f7

baszpt	= $00ff
facov	= $70
z_7f8e	= $fe
lstx	= $c5

stack	= $0100

buf	= $0200 ; BASIC Line Editor Input Buffer ($0200-$0258)

; rs-232 stuff
ridbe	= $029b ; RS-232: Index to End of Receive Buffer
ridbs	= $029c ; RS-232: Index to Start of Receive Buffer
rodbs	= $029d ; RS-232: Index to Start of Transmit Buffer
rodbe	= $029e ; RS-232: Index to End of Transmit Buffer

enabl	= $02a1 ; RS-232 Interrupts Enabled

ci2pra	= $dd00 ; CIA #2 Data Port Register A
ci2prb	= $dd01 ; CIA #2 Data Port Register B
ci2cra	= $dd0e ; CIA #2 Control Register A

; kernal routines:
setmsg	= $ff90
readst	= $ffb7
setlfs	= $ffba
setnam	= $ffbd
open	= $ffc0
close	= $ffc3
chkin	= $ffc6
chkout	= $ffc9
clrchn	= $ffcc
chrin	= $ffcf
chrout	= $ffd2
loadf	= $ffd5
savef	= $ffd8
getin	= $ffe4
clall	= $ffe7

; printable equates:
return	= 13 ; $0d
space	= 32 ; $20
quote	= 34 ; $22
comma	= 44 ; $2c
period	= 46 ; $2e
colon	= 58 ; $3a
pound	= 92 ; $5c
{endasm}
